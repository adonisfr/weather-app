{"version":3,"sources":["components/context/WeatherContext.js","components/common/img/place_white_24dp.svg","components/utils.js","components/Current.js","components/hightLights/Item.js","components/hightLights/ItemValue.js","components/hightLights/HightLights.js","components/common/img/my_location_white_24dp.svg","components/common/img/search_white_36dp.svg","components/search/Search.js","components/context/WeatherReducer.js","components/context/WeatherState.js","components/forecast/ForecastItem.js","components/forecast/ForecastList.js","components/forecast/Forecast.js","components/Map.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherContext","createContext","showGeolocationError","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","Current","useContext","weather","units","getCurrentWeatherByLatLon","setLocationMessage","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","icon","main","today","dayjs","unix","dt","format","className","src","alt","temp","place","name","sys","country","Item","title","value","defaultProps","ItemValue","primaryText","secundaryText","HightLights","forecast","uvi","current","windSpeed","wind_speed","windSpeedUnit","humidity","visibility","pressure","toString","Search","useState","disabled","setDisable","locationMessage","getCurrentWeatherByCity","imgSearch","placeholder","onKeyUp","e","keyCode","target","onClick","type","location","state","action","payload","WeatherState","children","useReducer","WeatherReducer","dispatch","message","Provider","axios","get","then","response","data","catch","err","lat","lon","console","getForecast","ForecastItem","item","day","max","min","ForecastList","list","map","i","index","Forecast","coord","daily","ICON","iconUrl","iconSize","ChangeView","center","useMap","setView","Map","MapContainer","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","Popup","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f7cf3d5.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst WeatherContext = createContext();\n\nexport default WeatherContext;\n","export default __webpack_public_path__ + \"static/media/place_white_24dp.fdb57be5.svg\";","export default function showGeolocationError(error) {\n  switch (error.code) {\n    case error.PERMISSION_DENIED:\n      return \"User denied the request for Geolocation.\";\n    case error.POSITION_UNAVAILABLE:\n      return \"Location information is unavailable.\";\n    case error.TIMEOUT:\n      return \"The request to get user location timed out.\";\n    case error.UNKNOWN_ERROR:\n      return \"An unknown error occurred.\";\n    default:\n      return \"ssssss\";\n  }\n}\n","import React, { useContext, useEffect } from \"react\";\nimport dayjs from \"dayjs\";\nimport WeatherContext from \"./context/WeatherContext\";\nimport place from \"./common/img/place_white_24dp.svg\";\nimport showGeolocationError from \"./utils\";\n\nconst Current = () => {\n  const { weather, units, getCurrentWeatherByLatLon, setLocationMessage } = useContext(\n    WeatherContext\n  );\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position?.coords || {};\n          getCurrentWeatherByLatLon(latitude, longitude);\n        },\n        (error) => {\n          setLocationMessage(showGeolocationError(error));\n        }\n      );\n    }\n  }, []);\n\n  const { icon, main } = weather?.weather ? weather?.weather[0] : {};\n\n  const today = weather ? dayjs.unix(weather.dt).format(\"ddd D MMM\") : \"\";\n\n  if (weather) {\n    return (\n      <div className=\"flex flex-col items-center mb-6\">\n        <img src={`http://openweathermap.org/img/wn/${icon}@4x.png`} alt=\"icon\" />\n        <div className=\"flex flex-col space-y-12 items-center text-gray-100\">\n          <div className=\"\">\n            <span className=\"text-6xl\">{weather?.main?.temp}</span>\n            <sup className=\"text-3xl \">{units === \"metric\" ? \"℃\" : \"℉\"}</sup>\n          </div>\n          <span className=\"text-xl text-gray-200\">{main}</span>\n          <span className=\"text-sm text-gray-300\">Today - {today}</span>\n        </div>\n        <div className=\"flex space-x-2 items-center space-y-3\">\n          <img src={place} alt=\"place\" className=\"h-4 mt-3\" />\n          <span className=\"text-xs text-gray-400\">{`${weather?.name} (${weather?.sys?.country})`}</span>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default Current;\n","import propTypes from \"prop-types\";\n\nconst Item = ({ title, value }) => (\n  <div className=\"flex flex-col items-center bg-gray-800 w-full lg:w-5/12 xl:w-64 py-3 px-2 my-2 mx-2\">\n    <p className=\"text-sm text-gray-300 font-semibold mb-2\">{title}</p>\n    {typeof value === \"object\" ? (\n      value\n    ) : (\n      <p className=\"text-5xl text-gray-200 font-bold\">{value}</p>\n    )}\n  </div>\n);\n\nItem.propTypes = {\n  title: propTypes.string,\n  value: propTypes.oneOfType([propTypes.string, propTypes.element])\n};\n\nItem.defaultProps = {\n  title: \"\",\n  value: \"\"\n};\n\nexport default Item;\n","import propTypes from \"prop-types\";\n\nconst ItemValue = ({ primaryText, secundaryText }) => (\n  <div className=\"flex flex-row space-x-1\">\n    <p className=\"text-5xl text-gray-200 font-bold\">{primaryText}</p>\n    <p className=\"text-xl text-gray-400 font-semibold mt-2\">{secundaryText}</p>\n  </div>\n);\n\nItemValue.propTypes = {\n  primaryText: propTypes.string,\n  secundaryText: propTypes.string\n};\n\nItemValue.defaultProps = {\n  primaryText: \"\",\n  secundaryText: \"\"\n};\n\nexport default ItemValue;\n","import { useContext } from \"react\";\nimport WeatherContext from \"../context/WeatherContext\";\nimport Item from \"./Item\";\nimport ItemValue from \"./ItemValue\";\n\nconst HightLights = () => {\n  const { forecast, units } = useContext(WeatherContext);\n\n  const uvi = forecast?.current?.uvi || 0;\n\n  const windSpeed = forecast?.current?.wind_speed || \"\";\n  const windSpeedUnit = units === \"metric\" ? \"meter/sec\" : \"miles/hour\";\n  const { humidity, visibility, pressure } = forecast?.current || {};\n\n  if (forecast) {\n    return (\n      <div className=\"flex flex-col px-3\">\n        <p className=\"text-gray-50 text-lg font-semibold mb-3 ml-8\"> Today&apos;s HightLights</p>\n        <div className=\"flex flex-wrap sm:justify-center md:justify-start md:ml-5\">\n          <Item title=\"UV Index\" value={uvi.toString()} />\n          <Item\n            title=\"Wind Status\"\n            value={<ItemValue primaryText={windSpeed.toString()} secundaryText={windSpeedUnit} />}\n          />\n          <Item\n            title=\"Humidity\"\n            value={\n              <ItemValue primaryText={humidity ? humidity.toString() : \"\"} secundaryText=\"%\" />\n            }\n          />\n          <Item\n            title=\"Visibility\"\n            value={\n              <ItemValue\n                primaryText={visibility ? visibility.toString() : \"\"}\n                secundaryText=\"metres\"\n              />\n            }\n          />\n          <Item\n            title=\"Air Pressure\"\n            value={\n              <ItemValue primaryText={pressure ? pressure.toString() : \"\"} secundaryText=\"hPa\" />\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default HightLights;\n","export default __webpack_public_path__ + \"static/media/my_location_white_24dp.49003dd3.svg\";","export default __webpack_public_path__ + \"static/media/search_white_36dp.0dad544f.svg\";","import React, { useContext, useState } from \"react\";\nimport location from \"../common/img/my_location_white_24dp.svg\";\nimport imgSearch from \"../common/img/search_white_36dp.svg\";\nimport WeatherContext from \"../context/WeatherContext\";\nimport showGeolocationError from \"../utils\";\n\nconst Search = () => {\n  const [disabled, setDisable] = useState(false);\n  const {\n    locationMessage,\n    getCurrentWeatherByCity,\n    getCurrentWeatherByLatLon,\n    setLocationMessage\n  } = useContext(WeatherContext);\n\n  const onPressEnter = (e) => {\n    if (e.keyCode === 13 && e.target.value !== \"\") {\n      getCurrentWeatherByCity(e.target.value);\n    }\n  };\n\n  const searchCurrentLocation = () => {\n    if (navigator.geolocation) {\n      setDisable(true);\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position?.coords || {};\n          getCurrentWeatherByLatLon(latitude, longitude);\n          setDisable(false);\n        },\n        (error) => {\n          setLocationMessage(showGeolocationError(error));\n          setDisable(false);\n        }\n      );\n    }\n  };\n\n  return (\n    <div className=\"py-5\">\n      <div className=\"flex justify-between px-3  space-x-3\">\n        <div className=\"flex border border-gray-500 border-opacity-30 px-1 py-1 rounded-2xl w-64\">\n          <img src={imgSearch} alt=\"search\" className=\"h-5 mr-1 mt-1 opacity-50\" />\n          <input\n            className=\"bg-transparent focus:outline-none w-full text-gray-300\"\n            placeholder=\"Search for place...\"\n            onKeyUp={onPressEnter}\n          />\n        </div>\n        <button\n          className={`bg-gray-400 h-6 w-6 px-1 mt-1 rounded-full focus:outline-none ${\n            disabled ? \"opacity-50 cursor-not-allowed\" : \"\"\n          }`}\n          onClick={searchCurrentLocation}\n          type=\"button\"\n          disabled={disabled}\n        >\n          <img src={location} className=\"\" alt=\"location\" />\n        </button>\n      </div>\n      <div className=\"flex justify-center text-base text-red-500 text-opacity-90 font-semibold\">\n        {locationMessage}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","// eslint-disable-next-line func-names\nexport default function (state, action) {\n  switch (action.type) {\n    case \"GET_WEATHER\":\n      return {\n        ...state,\n        weather: action.payload.weather,\n        units: action.payload.units,\n        locationMessage: \"\"\n      };\n    case \"GET_FORECAST\":\n      return {\n        ...state,\n        forecast: action.payload.forecast,\n        units: action.payload.units,\n        locationMessage: \"\"\n      };\n    case \"LOCATION_MESSAGE\":\n      return {\n        ...state,\n        locationMessage: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import React, { useReducer } from \"react\";\nimport propTypes from \"prop-types\";\nimport axios from \"axios\";\nimport WeatherReducer from \"./WeatherReducer\";\nimport WeatherContext from \"./WeatherContext\";\n\nconst WeatherState = ({ children }) => {\n  const initialState = {\n    weather: null,\n    units: \"metric\",\n    forecast: null,\n    locationMessage: null\n  };\n\n  const [state, dispatch] = useReducer(WeatherReducer, initialState);\n\n  const setLocationMessage = (message) => {\n    dispatch({\n      type: \"LOCATION_MESSAGE\",\n      payload: message\n    });\n  };\n\n  const getCurrentWeatherByCity = (place, units = state.units) => {\n    axios\n      .get(\n        `http://api.openweathermap.org/data/2.5/weather?q=${place}&units=${units}&appid=ca6c12c824777f7080f1c00f1d19b42a`\n      )\n      .then((response) => {\n        dispatch({\n          type: \"GET_WEATHER\",\n          payload: { weather: response.data, units }\n        });\n      })\n      .catch((err) => setLocationMessage(err.response?.data?.message));\n  };\n\n  const getCurrentWeatherByLatLon = (lat, lon, units = state.units) => {\n    axios\n      .get(\n        `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=${units}&appid=ca6c12c824777f7080f1c00f1d19b42a`\n      )\n      .then((response) => {\n        dispatch({\n          type: \"GET_WEATHER\",\n          payload: { weather: response.data, units }\n        });\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const getForecast = (lat, lon, units = state.units) => {\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly,minutely&units=${units}&appid=ca6c12c824777f7080f1c00f1d19b42a`\n      )\n      .then((response) => {\n        dispatch({\n          type: \"GET_FORECAST\",\n          payload: { forecast: response.data, units }\n        });\n      })\n      .catch((err) => console.error(err));\n  };\n\n  return (\n    <WeatherContext.Provider\n      value={{\n        weather: state.weather,\n        units: state.units,\n        forecast: state.forecast,\n        locationMessage: state.locationMessage,\n        getCurrentWeatherByCity,\n        getCurrentWeatherByLatLon,\n        getForecast,\n        setLocationMessage\n      }}\n    >\n      {children}\n    </WeatherContext.Provider>\n  );\n};\n\nWeatherState.propTypes = {\n  children: propTypes.oneOfType([propTypes.string, propTypes.element])\n};\n\nWeatherState.defaultProps = {\n  children: \"\"\n};\n\nexport default WeatherState;\n","import propTypes from \"prop-types\";\nimport { useContext } from \"react\";\nimport dayjs from \"dayjs\";\nimport WeatherContext from \"../context/WeatherContext\";\n\nconst ForecastItem = ({ item }) => {\n  const { units } = useContext(WeatherContext);\n\n  const day = item?.dt ? dayjs.unix(item.dt).format(\"ddd, D MMM\") : \"\";\n  const icon = item?.weather[0]?.icon;\n\n  return (\n    <div className=\"flex flex-col bg-gray-800 w-32 items-center text-sm text-gray-300 py-2 rounded-lg\">\n      <div>{day}</div>\n      <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"icon\" />\n      <div className=\"text-md space-x-4 text-xs\">\n        <span>\n          {item?.temp?.max || \"\"}\n          {units === \"metric\" ? \"℃\" : \"℉\"}\n        </span>\n        <span>\n          {item?.temp?.min || \"\"}\n          {units === \"metric\" ? \"℃\" : \"℉\"}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nForecastItem.propTypes = {\n  item: propTypes.instanceOf(Object)\n};\n\nForecastItem.defaultProps = {\n  item: null\n};\n\nexport default ForecastItem;\n","import propTypes from \"prop-types\";\nimport ForecastItem from \"./ForecastItem\";\n\nconst ForecastList = ({ list }) => (\n  <div className=\"flex flex-wrap justify-center 2xl:justify-start 2xl:ml-8\">\n    {list.map((i, index) => (\n      <div key={`${index + 1}`} className=\"mx-2 my-2\">\n        <ForecastItem item={i} />\n      </div>\n    ))}\n  </div>\n);\n\nForecastList.propTypes = {\n  list: propTypes.arrayOf(propTypes.any)\n};\n\nForecastList.defaultProps = {\n  list: []\n};\n\nexport default ForecastList;\n","import React, { useContext, useEffect } from \"react\";\nimport WeatherContext from \"../context/WeatherContext\";\nimport ForecastList from \"./ForecastList\";\n\nconst Forecast = () => {\n  const { weather, forecast, getForecast } = useContext(WeatherContext);\n  const { lat, lon } = weather?.coord || {};\n\n  useEffect(() => {\n    if (lat && lon) {\n      getForecast(lat, lon);\n    }\n  }, [lat, lon]);\n\n  return (\n    <div className=\"bg-gray-900 py-5\">\n      <ForecastList list={forecast?.daily || []} />\n    </div>\n  );\n};\n\nexport default Forecast;\n","import { MapContainer, Marker, Popup, TileLayer, useMap } from \"react-leaflet\";\nimport { icon } from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useContext } from \"react\";\nimport WeatherContext from \"./context/WeatherContext\";\n\nconst ICON = icon({\n  iconUrl: \"marker-icon.png\",\n  iconSize: [16, 24]\n});\n\nconst ChangeView = ({ center }) => {\n  const map = useMap();\n  map.setView(center);\n  return null;\n};\n\nconst Map = () => {\n  const { weather } = useContext(WeatherContext);\n  const { lat, lon } = weather?.coord || \"\";\n\n  if (!lat || !lon) {\n    return null;\n  }\n\n  return (\n    <div className=\"flex w-92 mx-5 my-5 sm:ml-10 2xl:w-1/2 2xl:mt-10\">\n      <MapContainer className=\"h-64 w-full\" center={[lat, lon]} zoom={10} scrollWheelZoom={false}>\n        <ChangeView center={[lat, lon]} />\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker icon={ICON} position={[lat, lon]}>\n          <Popup>\n            <p>{weather?.name || \"\"}</p>\n          </Popup>\n        </Marker>\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default Map;\n","import Current from \"./components/Current\";\nimport HightLights from \"./components/hightLights/HightLights\";\nimport Search from \"./components/search/Search\";\nimport WeatherState from \"./components/context/WeatherState\";\nimport Forecast from \"./components/forecast/Forecast\";\nimport Map from \"./components/Map\";\n\nfunction App() {\n  return (\n    <WeatherState>\n      <div className=\"flex flex-col sm:flex-row bg-gray-800 h-screen\">\n        {/* left  */}\n        <div className=\"bg-black-600 w-full sm:w-auto\">\n          <Search />\n          <Current />\n        </div>\n        <div className=\"bg-gray-900 py-4 w-full sm:overflow-auto\">\n          <Forecast />\n          <HightLights />\n          <Map />\n        </div>\n      </div>\n    </WeatherState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}